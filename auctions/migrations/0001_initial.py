# Generated by Django 4.0.6 on 2022-08-06 15:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brend', models.CharField(db_index=True, max_length=32)),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': '01_Бренд',
                'ordering': ('brend',),
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.CharField(db_index=True, max_length=32)),
            ],
            options={
                'verbose_name': 'Материал корпуса',
                'verbose_name_plural': '04_Материал корпуса',
                'ordering': ('case',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(db_index=True, max_length=16)),
                ('code', models.CharField(db_index=True, max_length=4)),
            ],
            options={
                'verbose_name': 'Страна производитель',
                'verbose_name_plural': '07_Страна производитель',
                'ordering': ('country',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_Name', models.CharField(max_length=32)),
                ('img_Logo', models.ImageField(upload_to='images/')),
                ('img_01', models.ImageField(upload_to='images/')),
                ('img_02', models.ImageField(upload_to='images/')),
                ('img_03', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': '08_Изображение товара',
                'ordering': ('img_Name',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pr_Name', models.CharField(db_index=True, max_length=64)),
                ('pr_Brend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pr_Brend', to='auctions.brend')),
                ('pr_Case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pr_Case', to='auctions.case')),
                ('pr_Country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pr_Country', to='auctions.country')),
                ('pr_Img', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pr_Img', to='auctions.image')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'ТОВАРЫ',
                'ordering': ('pr_Name',),
            },
        ),
        migrations.CreateModel(
            name='Resist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resist', models.CharField(db_index=True, max_length=8)),
            ],
            options={
                'verbose_name': 'Водозащита',
                'verbose_name_plural': '06_Водозащита',
                'ordering': ('resist',),
            },
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(db_index=True, max_length=8)),
            ],
            options={
                'verbose_name': 'Пол',
                'verbose_name_plural': '03_Пол',
                'ordering': ('sex',),
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sh_Price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sh_Total', models.PositiveIntegerField(default=0)),
                ('sh_Sales', models.PositiveIntegerField(default=0)),
                ('sh_Left', models.PositiveIntegerField(default=0)),
                ('sh_Sale', models.PositiveIntegerField(default=0)),
                ('sh_Status', models.BooleanField(default=False)),
                ('sh_Desc', models.TextField(blank=True)),
                ('sh_Date', models.DateTimeField(auto_now_add=True)),
                ('sh_Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sh_Product', to='auctions.product')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'МАГАЗИН',
                'ordering': ('sh_Product',),
            },
        ),
        migrations.CreateModel(
            name='Strap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strap', models.CharField(db_index=True, max_length=32)),
            ],
            options={
                'verbose_name': 'Материал ремешка',
                'verbose_name_plural': '05_Материал ремешка',
                'ordering': ('strap',),
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=32)),
            ],
            options={
                'verbose_name': 'Механизм',
                'verbose_name_plural': '02_Механизм',
                'ordering': ('type',),
            },
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wl_Product_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='auctions.product')),
                ('wl_Shop', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='auctions.shop')),
                ('wl_User', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': '11_Избранное',
                'ordering': ('wl_User',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='pr_Resist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pr_Resist', to='auctions.resist'),
        ),
        migrations.AddField(
            model_name='product',
            name='pr_Sex',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pr_Sex', to='auctions.sex'),
        ),
        migrations.AddField(
            model_name='product',
            name='pr_Strap',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pr_Strap', to='auctions.strap'),
        ),
        migrations.AddField(
            model_name='product',
            name='pr_Type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pr_Type', to='auctions.type'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_Text', models.TextField(blank=True, null=True)),
                ('c_Date', models.DateTimeField(auto_now=True)),
                ('c_Product_id', models.IntegerField()),
                ('c_User', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Коментарии',
                'verbose_name_plural': '12_Коментарии',
                'ordering': ('c_User',),
            },
        ),
    ]
